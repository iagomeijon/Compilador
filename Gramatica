######## INICIO DO BLOCO DE DECLARACAO DE VAIRAVEIS ##########

#DECLARAÇÃO TIPOS DA LINGUAGUEM
    TIPO -> inteiro .
    TIPO -> real .

#DECLARAÇÃO DOS TIPO DE NUMEROS
    NUM -> numero_inteiro .
    NUM -> numero_real .

CONCATER ID: GERA UMA CONCATENAÇÃO DE ID ( 1 OU MAIS )
    CONCATENAR_ID -> id ; CONCATENAR_ID .
    CONCATENAR_ID -> id .

DECLARAÇÃO DE UMA VARIAVEL (  1 OU MAIS) :
    DECLARACAO_ID -> TIPO : CONCATENAR_ID .

DECLARAÇÃO DE UM VETOR: (1 )
    DECLARACAO_VET -> vet TIPO : id numero_inteiro .

DECLARAÇÃO DE VARIAVEIS (NADA , 1 OU MAIS):
    VARIAVEL -> DECLARACAO_ID .
    VARIAVEL -> DECLARACAO_VET .

BLOCO DE DECLARAÇÃO DE FUNÇOES (1 BLOCO , COM ZERO, UMA OU MAIS VARIAVEIS) (SEM O VAR , QUEM CHAMA QUE DEVE COLOCAR OU NÃO):
    BLOCO_VARIAVEIS -> VARIAVEL ponto BLOCO_VARIAVEIS .
    BLOCO_VARIAVEIS -> .

######## FIM DO BLOCO DE DECLARACAO DE VAIRAVEIS ##########

######## INICIO DO BLOCO COMANDOS ##########

CHAMADA DE FUNCAO (1):
    CHAMADA_FUNC ->  id ( LISTAR_PARAMETROS_CHAMADA ) .
    LISTAR_PARAMETROS_CHAMADA -> CONCATENAR_EXP .
    LISTAR_PARAMETROS_CHAMADA -> .
    CONCATENAR_EXP -> EXP ; CONCATENAR_EXP .
    CONCATENAR_EXP -> EXP .

EXPRESSÃO ARITMETRICA (1 ou MAIS):
    EXP -> EXP_N2 SOMA_SUB EXP .
    EXP -> EXP_N2 .
    EXP_N2 -> EXP_N3 MULTI_DIV_REST EXP_N2 .
    EXP_N2 -> EXP_N3.
    EXP_N3 -> EXP_FINAL ** EXP_N3 .
    EXP_N3 -> EXP_FINAL .
    SOMA_SUB -> + .
    SOMA_SUB -> - .
    MULTI_DIV_REST -> *.
    MULTI_DIV_REST -> /.
    MULTI_DIV_REST -> %.
    EXP_FINAL -> SINAL id .
    EXP_FINAL -> SINAL NUM .
    EXP_FINAL -> SINAL id [ EXP ] .
    EXP_FINAL -> SINAL CHAMADA_FUNC .
    EXP_FINAL ->  ( EXP ) .
    EXP_FINAL -> - ( EXP ) .
    SINAL -> - .
    SINAL -> .

ATRIBUIÇÃO (0 OU 1) :
     ATRIBUICAO -> id INDEX <- EXP .
     INDEX -> [ EXP ] .
     INDEX -> .

EXPRESSAO RELACIONAL SIMPLES ( 1 OU 0):
    EXP_RELACIONAL_SIMPLES -> EXP RELACIONAIS EXP .
    RELACIONAIS -> = .
    RELACIONAIS -> < .
    RELACIONAIS -> <= .
    RELACIONAIS -> > .
    RELACIONAIS -> >= .
    RELACIONAIS -> <> .

EXPRESSAO RELACIONAL TOTAL (1 OU MAIS ):
    EXP_RELACIONAL_TOTAL -> EXP_RELACIONAL_N2 or EXP_RELACIONAL_TOTAL.
    EXP_RELACIONAL_TOTAL -> EXP_RELACIONAL_N2.
    EXP_RELACIONAL_N2 ->  EXP_RELACIONAL_N3 & EXP_RELACIONAL_N2.
    EXP_RELACIONAL_N2 -> EXP_RELACIONAL_N3.
    EXP_RELACIONAL_N3 -> ! EXP_RELACIONAL_FINAL.
    EXP_RELACIONAL_N3 -> EXP_RELACIONAL_FINAL.
    EXP_RELACIONAL_FINAL -> EXP_RELACIONAL_SIMPLES.
    EXP_RELACIONAL_FINAL -> ( EXP_RELACIONAL_TOTAL ) .


BLOCO DE COMANDO (0 OU MAIS) :
    BLOCO_COMANDO -> CHAMADA_FUNC ponto BLOCO_COMANDO .
    BLOCO_COMANDO -> ATRIBUICAO ponto BLOCO_COMANDO .
    BLOCO_COMANDO -> BLOCO_IF  BLOCO_COMANDO .
    BLOCO_COMANDO -> BLOCO_ENQUANTO BLOCO_COMANDO.
    BLOCO_COMANDO -> BLOCO_ATEH BLOCO_COMANDO .
    BLOCO_COMANDO -> LEIA ponto  BLOCO_COMANDO .
    BLOCO_COMANDO -> ESCREVA ponto BLOCO_COMANDO .
    BLOCO_COMANDO -> pare ponto BLOCO_COMANDO .
    BLOCO_COMANDO -> RECEBA ponto BLOCO_COMANDO.
    BLOCO_COMANDO -> .

BLOCO IF (1) :
    BLOCO_IF -> se EXP_RELACIONAL_TOTAL inicio BLOCO_COMANDO fim BLOCO_SENAO .
    BLOCO_SENAO -> senao inicio BLOCO_COMANDO fim .
    BLOCO_SENAO -> .

BLOCO ENQUANTO (1) :
    BLOCO_ENQUANTO -> enquanto EXP_RELACIONAL_TOTAL inicio BLOCO_COMANDO fim .

BLOCO ATEH (1):
    BLOCO_ATEH -> para id de EXP ateh EXP inicio BLOCO_COMANDO fim .

LEIA (1):
    LEIA ->  leia CONCATENAR_ID .

ESCREVA (1 NÃO TÁ PODENDO UM ESCREVA COM UMA LISTA VAZIA SEMPRE ELE ESCREVE PELO MENOS UMA) :
    ESCREVA -> escreva LISTA_ESCREVA .
    LISTA_ESCREVA -> string ; LISTA_ESCREVA.
    LISTA_ESCREVA -> EXP ; LISTA_ESCREVA.
    LISTA_ESCREVA -> string .
    LISTA_ESCREVA -> EXP .

RECEBA (1):
   RECEBA -> receba .
   RECEBA -> receba ( EXP ) .

######## FIM DO BLOCO COMANDOS ##########

######## INICIO DO BLOCO FUNÇÕES ##########

LISTAR PARAMETROS FUNCAO :
    LISTAR_PARAMETROS ->  PARAMETROS .
    LISTAR_PARAMETROS -> .
    PARAMETROS -> VETOR TIPO : id ; PARAMETROS .
    PARAMETROS -> VETOR TIPO : id .
    VETOR -> vet .
    VETOR -> .

PROTOTIPO DE FUNÇÃO (1) :
    PROT_FUNC -> funcao id ( LISTAR_PARAMETROS ) : TIPO_RETORNO .
    TIPO_RETORNO -> TIPO .
    TIPO_RETORNO -> nulo .


BLOCO  DE PROTOTIPO E DEC DE FUNCAO :
    BLOCO_PROTOTIPO_DEC_FUNC -> PROT_FUNC ponto BLOCO_PROTOTIPO_DEC_FUNC .
    BLOCO_PROTOTIPO_DEC_FUNC -> BLOCO_DEC_FUNC .

DECLARACAO DE FUNÇÃO (1):
    DEC_FUNCAO -> PROT_FUNC var BLOCO_VARIAVEIS inicio BLOCO_COMANDO fim .


BLOCO DECLARAÇÃO DE FUNÇÃO (CHAMDO PELO BLOCO QUE GERA PROTOTIPO):
    BLOCO_DEC_FUNC -> DEC_FUNCAO BLOCO_DEC_FUNC .
    BLOCO_DEC_FUNC -> .

######## FIM DO BLOCO FUNÇÕES ##########

######## INICIO DO BLOCO PROGRAMA ##########

PROGRAMA ->  BLOCO_VARIAVEIS BLOCO_PROTOTIPO_DEC_FUNC var BLOCO_VARIAVEIS inicio BLOCO_COMANDO fim .

######## FIM DO BLOCO PROGRAMA ##########